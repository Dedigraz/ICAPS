// <auto-generated />
using ICAPS_API.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ICAPS_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241124184313_ITS object")]
    partial class ITSobject
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("ICAPS_API.Database.Anomaly", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnomalyType")
                        .HasColumnType("INTEGER");

                    b.Property<float>("height")
                        .HasColumnType("REAL");

                    b.Property<float>("lat")
                        .HasColumnType("REAL");

                    b.Property<float>("lng")
                        .HasColumnType("REAL");

                    b.Property<float>("offset")
                        .HasColumnType("REAL");

                    b.Property<float>("width")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Anomalies");
                });

            modelBuilder.Entity("ICAPS_API.Database.ITSObj", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnomalyType")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "type");

                    b.Property<string>("confidence")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "confidence");

                    b.Property<string>("flamestatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("height")
                        .HasColumnType("REAL")
                        .HasAnnotation("Relational:JsonPropertyName", "h");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "coordinate");

                    b.Property<string>("platenumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("region")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("temperature")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("timestamp")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "datetime");

                    b.Property<float>("vibration")
                        .HasColumnType("REAL");

                    b.Property<float>("width")
                        .HasColumnType("REAL")
                        .HasAnnotation("Relational:JsonPropertyName", "w");

                    b.Property<float>("x_offset")
                        .HasColumnType("REAL")
                        .HasAnnotation("Relational:JsonPropertyName", "x");

                    b.Property<float>("y_offset")
                        .HasColumnType("REAL")
                        .HasAnnotation("Relational:JsonPropertyName", "y");

                    b.HasKey("id");

                    b.ToTable("ITSReturns");
                });
#pragma warning restore 612, 618
        }
    }
}
